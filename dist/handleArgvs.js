'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = handleArgvs;
const type = {
  '-t': 'typeface',
  '-s': 'sentence',
  '-c': 'color',
  '-v': 'verbose',
  '--typeface': 'typeface',
  '--sentence': 'sentence',
  '--color': 'color',
  '--verbose': 'verbose'
};

const handlers = {
  input: (argv, matcher, config, index) => {
    if (!matcher[argv]) throw new Error('INVALID_INPUT: ' + argv);

    return Object.assign({}, config, {
      [matcher[argv]]: index
    });
  }
};

function removeNumber(obj) {
  return Object.keys(obj).filter(key => !(typeof obj[key] === 'number')).reduce((acc, key) => Object.assign({}, acc, { [key]: obj[key] }), {});
}

function isExpectingInput(config, lastInputIndex) {
  var expectingInput = Object.keys(config).filter(function (key) {
    return config[key] === lastInputIndex;
  });

  return expectingInput.length !== 0 && expectingInput[0];
}

function handleArgvs(argvs) {
  return removeNumber(argvs.reduce((config, argv, index) => {
    if (argv[0] === '-') return handlers.input(argv, type, config, index);
    // Expecting Input
    const expectingInput = isExpectingInput(config, index - 1);
    if (expectingInput) return Object.assign({}, config, {
      [expectingInput]: argv
    });

    return Object.assign({}, config, {
      sentence: argv
    });
  }, {}));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9oYW5kbGVBcmd2cy5qcyJdLCJuYW1lcyI6WyJoYW5kbGVBcmd2cyIsInR5cGUiLCJoYW5kbGVycyIsImlucHV0IiwiYXJndiIsIm1hdGNoZXIiLCJjb25maWciLCJpbmRleCIsIkVycm9yIiwiT2JqZWN0IiwiYXNzaWduIiwicmVtb3ZlTnVtYmVyIiwib2JqIiwia2V5cyIsImZpbHRlciIsImtleSIsInJlZHVjZSIsImFjYyIsImlzRXhwZWN0aW5nSW5wdXQiLCJsYXN0SW5wdXRJbmRleCIsImV4cGVjdGluZ0lucHV0IiwibGVuZ3RoIiwiYXJndnMiLCJzZW50ZW5jZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBb0N3QkEsVztBQXBDeEIsTUFBTUMsT0FBTztBQUNYLFFBQU0sVUFESztBQUVYLFFBQU0sVUFGSztBQUdYLFFBQU0sT0FISztBQUlYLFFBQU0sU0FKSztBQUtYLGdCQUFjLFVBTEg7QUFNWCxnQkFBYyxVQU5IO0FBT1gsYUFBVyxPQVBBO0FBUVgsZUFBYTtBQVJGLENBQWI7O0FBV0EsTUFBTUMsV0FBVztBQUNmQyxTQUFPLENBQUNDLElBQUQsRUFBT0MsT0FBUCxFQUFnQkMsTUFBaEIsRUFBd0JDLEtBQXhCLEtBQWtDO0FBQ3ZDLFFBQUksQ0FBQ0YsUUFBUUQsSUFBUixDQUFMLEVBQW9CLE1BQU0sSUFBSUksS0FBSixDQUFVLG9CQUFvQkosSUFBOUIsQ0FBTjs7QUFFcEIsV0FBT0ssT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JKLE1BQWxCLEVBQTBCO0FBQy9CLE9BQUNELFFBQVFELElBQVIsQ0FBRCxHQUFpQkc7QUFEYyxLQUExQixDQUFQO0FBR0Q7QUFQYyxDQUFqQjs7QUFVQSxTQUFTSSxZQUFULENBQXNCQyxHQUF0QixFQUEyQjtBQUN6QixTQUFPSCxPQUFPSSxJQUFQLENBQVlELEdBQVosRUFDSkUsTUFESSxDQUNHQyxPQUFPLEVBQUUsT0FBT0gsSUFBSUcsR0FBSixDQUFQLEtBQW9CLFFBQXRCLENBRFYsRUFFSkMsTUFGSSxDQUVHLENBQUNDLEdBQUQsRUFBTUYsR0FBTixLQUFjTixPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQk8sR0FBbEIsRUFBdUIsRUFBRSxDQUFDRixHQUFELEdBQU9ILElBQUlHLEdBQUosQ0FBVCxFQUF2QixDQUZqQixFQUU4RCxFQUY5RCxDQUFQO0FBR0Q7O0FBRUQsU0FBU0csZ0JBQVQsQ0FBMEJaLE1BQTFCLEVBQWtDYSxjQUFsQyxFQUFrRDtBQUNoRCxNQUFJQyxpQkFBaUJYLE9BQU9JLElBQVAsQ0FBWVAsTUFBWixFQUNsQlEsTUFEa0IsQ0FDWCxVQUFVQyxHQUFWLEVBQWU7QUFDckIsV0FBT1QsT0FBT1MsR0FBUCxNQUFnQkksY0FBdkI7QUFDRCxHQUhrQixDQUFyQjs7QUFLQSxTQUFPQyxlQUFlQyxNQUFmLEtBQTBCLENBQTFCLElBQStCRCxlQUFlLENBQWYsQ0FBdEM7QUFDRDs7QUFFYyxTQUFTcEIsV0FBVCxDQUFxQnNCLEtBQXJCLEVBQTRCO0FBQ3pDLFNBQU9YLGFBQWFXLE1BQU1OLE1BQU4sQ0FBYSxDQUFDVixNQUFELEVBQVNGLElBQVQsRUFBZUcsS0FBZixLQUF5QjtBQUN4RCxRQUFJSCxLQUFLLENBQUwsTUFBWSxHQUFoQixFQUFxQixPQUFPRixTQUFTQyxLQUFULENBQWVDLElBQWYsRUFBcUJILElBQXJCLEVBQTJCSyxNQUEzQixFQUFtQ0MsS0FBbkMsQ0FBUDtBQUNyQjtBQUNBLFVBQU1hLGlCQUFpQkYsaUJBQWlCWixNQUFqQixFQUF5QkMsUUFBUSxDQUFqQyxDQUF2QjtBQUNBLFFBQUlhLGNBQUosRUFBb0IsT0FBT1gsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFDekJKLE1BRHlCLEVBQ2pCO0FBQ04sT0FBQ2MsY0FBRCxHQUFrQmhCO0FBRFosS0FEaUIsQ0FBUDs7QUFLcEIsV0FBT0ssT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0JKLE1BQWxCLEVBQTBCO0FBQy9CaUIsZ0JBQVVuQjtBQURxQixLQUExQixDQUFQO0FBR0QsR0FabUIsRUFZakIsRUFaaUIsQ0FBYixDQUFQO0FBYUQiLCJmaWxlIjoiaGFuZGxlQXJndnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0eXBlID0ge1xuICAnLXQnOiAndHlwZWZhY2UnLFxuICAnLXMnOiAnc2VudGVuY2UnLFxuICAnLWMnOiAnY29sb3InLFxuICAnLXYnOiAndmVyYm9zZScsXG4gICctLXR5cGVmYWNlJzogJ3R5cGVmYWNlJyxcbiAgJy0tc2VudGVuY2UnOiAnc2VudGVuY2UnLFxuICAnLS1jb2xvcic6ICdjb2xvcicsXG4gICctLXZlcmJvc2UnOiAndmVyYm9zZSdcbn1cblxuY29uc3QgaGFuZGxlcnMgPSB7XG4gIGlucHV0OiAoYXJndiwgbWF0Y2hlciwgY29uZmlnLCBpbmRleCkgPT4ge1xuICAgIGlmICghbWF0Y2hlclthcmd2XSkgdGhyb3cgbmV3IEVycm9yKCdJTlZBTElEX0lOUFVUOiAnICsgYXJndilcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBjb25maWcsIHtcbiAgICAgIFttYXRjaGVyW2FyZ3ZdXTogaW5kZXhcbiAgICB9KVxuICB9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZU51bWJlcihvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iailcbiAgICAuZmlsdGVyKGtleSA9PiAhKHR5cGVvZiBvYmpba2V5XSA9PT0gJ251bWJlcicpKVxuICAgIC5yZWR1Y2UoKGFjYywga2V5KSA9PiBPYmplY3QuYXNzaWduKHt9LCBhY2MsIHsgW2tleV06IG9ialtrZXldIH0pLCB7fSlcbn1cblxuZnVuY3Rpb24gaXNFeHBlY3RpbmdJbnB1dChjb25maWcsIGxhc3RJbnB1dEluZGV4KSB7XG4gIHZhciBleHBlY3RpbmdJbnB1dCA9IE9iamVjdC5rZXlzKGNvbmZpZylcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHJldHVybiBjb25maWdba2V5XSA9PT0gbGFzdElucHV0SW5kZXhcbiAgICB9KVxuXG4gIHJldHVybiBleHBlY3RpbmdJbnB1dC5sZW5ndGggIT09IDAgJiYgZXhwZWN0aW5nSW5wdXRbMF1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlQXJndnMoYXJndnMpIHtcbiAgcmV0dXJuIHJlbW92ZU51bWJlcihhcmd2cy5yZWR1Y2UoKGNvbmZpZywgYXJndiwgaW5kZXgpID0+IHtcbiAgICBpZiAoYXJndlswXSA9PT0gJy0nKSByZXR1cm4gaGFuZGxlcnMuaW5wdXQoYXJndiwgdHlwZSwgY29uZmlnLCBpbmRleClcbiAgICAvLyBFeHBlY3RpbmcgSW5wdXRcbiAgICBjb25zdCBleHBlY3RpbmdJbnB1dCA9IGlzRXhwZWN0aW5nSW5wdXQoY29uZmlnLCBpbmRleCAtIDEpXG4gICAgaWYgKGV4cGVjdGluZ0lucHV0KSByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSxcbiAgICAgIGNvbmZpZywge1xuICAgICAgICBbZXhwZWN0aW5nSW5wdXRdOiBhcmd2XG4gICAgICB9KVxuXG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGNvbmZpZywge1xuICAgICAgc2VudGVuY2U6IGFyZ3ZcbiAgICB9KVxuICB9LCB7fSkpXG59XG4iXX0=