'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
const fontIndex = {
  'Featured FIGlet Fonts': ['Acrobatic', 'Alpha', 'Avatar', 'Big', 'BigMoneyne', 'BigMoneynw', 'BigMoneyse', 'BigMoneysw', 'Blocks', 'Bulbhead', 'Cards', 'Chiseled', 'Crawford2', 'Crazy', 'DancingFont', 'Diagonal3d', 'Doh', 'Doom', 'EftiWall', 'Epic', 'Firefontk', 'FireFonts', 'FlowerPower', 'FunFace', 'FunFaces', 'Ghost', 'Graceful', 'Graffiti', 'Impossible', 'index', 'Isometric1', 'Isometric2', 'Isometric3', 'Isometric4', 'JSBracketLetters', 'LilDevil', 'Merlin1', 'Modular', 'Ogre', 'PatorjkCheese', 'PatorjkHeX', 'Rectangles', 'Slant', 'SlantRelief', 'Small', 'SmallIsometric1', 'SmallSlant', 'Soft', 'Standard', 'StarWars', 'SubZero', 'SwampLand', 'Sweet', 'Train', 'Twisted', 'Varsity', 'WetLetts'],
  'ANSI FIGlet Fonts': ['3D-ASCII', 'ANSI Shadow', 'Bloody', 'Calvin S', 'Delta Corps Priest 1', 'Electronic', 'Elite', 'Stronger Than All', 'THIS', 'The Edge'],
  'Regular FIGlet Fonts': ['1Row', '3-D', '3x5', '4Max', '5 Line Oblique', 'AMC 3 Line', 'AMC 3 Liv1', 'AMC AAA01', 'AMC Neko', 'AMC Razor', 'AMC Razor2', 'AMC Slash', 'AMC Slider', 'AMC Thin', 'AMC Tubes', 'AMC Untitled', 'ASCII New Roman', 'Alligator', 'Alligator2', 'Alphabet', 'Arrows', 'Banner', 'Banner3-D', 'Banner3', 'Banner4', 'Barbwire', 'Basic', 'Bear', 'Bell', 'Benjamin', 'Big Chief', 'Bigfig', 'Binary', 'Block', 'Bolger', 'Braced', 'Bright', 'Broadway KB', 'Broadway', 'Bubble', 'Caligraphy', 'Caligraphy2', 'Catwalk', 'Chunky', 'Coinstak', 'Cola', 'Colossal', 'Computer', 'Contessa', 'Contrast', 'Cosmike', 'Crawford', 'Cricket', 'Cursive', 'Cyberlarge', 'Cybermedium', 'Cybersmall', 'Cygnet', 'DANC4', 'DWhistled', '\n\n', 'Decimal', 'Def Leppard', 'Diamond', 'Diet Cola', 'Digital', 'Dot Matrix', 'Double Shorts', 'Double', 'Dr Pepper', 'Efti Chess', 'Efti Font', 'Efti Italic', 'Efti Piti', 'Efti Robot', 'Efti Water', 'Fender', 'Filter', 'Flipped', 'Four Tops', 'Fraktur', 'Fuzzy', 'Georgi16', 'Georgia11', 'Ghoulish', 'Glenyn', 'Goofy', 'Gothic', 'Gradient', 'Greek', 'Heart Left', 'Heart Right', 'Henry 3D', 'Hex', 'Hieroglyphs', 'Hollywood', 'Horizontal Left', 'Horizontal Right', 'ICL-1900', 'Invita', '\n\n', 'Italic', 'Ivrit', 'JS Block Letters', 'JS Capital Curves', 'JS Cursive', 'JS Stick Letters', 'Jacky', 'Jazmine', 'Jerusalem', 'Katakana', 'Kban', 'Keyboard', 'Knob', 'LCD', 'Larry 3D', 'Lean', 'Letters', 'Line Blocks', 'Linux', 'Lockergnome', 'Madrid', 'Marquee', 'Maxfour', 'Merlin2', 'Mike', 'Mini', 'Mirror', 'Mnemonic', 'Morse', 'Moscow', 'Mshebrew210', 'Muzzle', 'NScript', 'NT Greek', 'NV Script', 'Nancyj-Fancy', 'Nancyj-Underlined', 'Nancyj', 'Nipples', 'O8', 'OS2', 'Octal', 'Old Banner', 'Pawp', 'Peaks Slant', 'Peaks', 'Pebbles', 'Pepper', 'Poison', 'Puffy', 'Puzzle', 'Pyramid', 'Rammstein', 'Relief', 'Relief2', 'Reverse', 'Roman', 'Rotated', 'Rounded', 'Rowan Cap', 'Rozzo', 'Runic', 'Runyc', 'S Blood', 'SL Script', 'Santa Clara', 'Script', 'Serifcap', 'Shadow', 'Shimrod', 'Short', 'Slide', 'Small Caps', 'Small Keyboard', 'Small Poison', 'Small Script', 'Small Shadow', 'Small Tengwar', 'Speed', 'Spliff', 'Stacey', 'Stampate', 'Stampatello', 'Star Strips', 'Stellar', 'Stforek', 'Stick Letters', 'Stop', 'Straight', 'Swan', 'Tanja', 'Tengwar', 'Term', 'Test1', 'Thick', 'Thin', 'Thorned', 'Three Point', 'Ticks Slant', 'Ticks', 'Tiles', 'Tinker-Toy', 'Tombstone', 'Trek', 'Tsalagi', 'Tubular', 'Two Point', 'USA Flag', 'Univers', 'Wavy', 'Weird', 'Whimsy', 'Wow'],
  'AOL Macro Fonts': ['Abraxis-Big', 'Abraxis-Small', 'Bent', 'Blest', 'Boie', 'Boie2', 'Bone\'s Font', 'CaMiZ', 'CeA', 'CeA2', 'Cheese', 'DaiR', 'Filth', 'FoGG', 'Galactus', 'Glue', 'HeX\'s Font', 'Hellfire', 'MeDi', 'Mer', 'PsY', 'PsY2', 'Reeko Font 1', 'Ribbit', 'Ribbit2', 'Ribbit3', 'Sony', 'TRaC Mini', 'TRaC Tiny', 'TRaC\'s Old School Font', 'TRaC', 'Twiggy', 'X-Pose', 'X99', 'X992', 'Zodi']
};

exports.default = fontIndex;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,