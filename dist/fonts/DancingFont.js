"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var DancingFont = {
  "0": "  ___      \n / _\'\\  u  \n| / U |/   \n| \\// |,-. \n \\___/(_/  \n  //       \n (__)      ",
  "1": "    _    \n   /\'|   \n u | |u  \n  \\| |/  \n   |_|   \n _//<,-, \n(__)(_/  ",
  "2": "  ____    \n |___\'\\   \n U __) |  \n \\/ __/ \\ \n |_____|u \n <<  //   \n(__)(__)  ",
  "3": " _____   \n|___\'/u  \nU_|_ \\/  \n ___) |  \n|____/   \n _// \\\\  \n(__)(__) ",
  "4": " _  _    \n| ||\'|   \n| || |_  \n|__   _| \n  /|_|\\  \n u_|||_u \n (__)__) ",
  "5": "  ____    \nU|\'___|u  \n\\|___ \\/  \n  ___) |  \n |____/   \n,-,>>\\,-. \n \\ ) (_/  ",
  "6": "   __     \nU /\'/_ u  \n\\| '_ \\/  \n | (_) |  \n  \\___/   \n _// \\\\_  \n(__) (__) ",
  "7": "  _____  \n |___ \'| \n    / /  \n u// /\\  \n  /_/ U  \n <<>>_   \n(__)__)  ",
  "8": "  ___     \nU( \' ) u  \n\\/   \\/   \n| ( ) |   \n \\___/>>  \n  )( (__) \n (__)     ",
  "9": "   ___    \n  / _\'\\   \n | (_) |  \n /\\__, |\\ \nU<< |_/ u \n(__) )(   \n    (__)  ",
  "A": "    _      \nU  /\'\\  u  \n \\/ _ \\/   \n / ___ \\   \n/_/   \\_\\  \n \\\\    >>  \n(__)  (__) ",
  "B": "   ____   \nU | __\')u \n \\|  _ \\/ \n  | |_) | \n  |____/  \n _|| \\\\_  \n(__) (__) ",
  "C": "   ____  \nU /\'___| \n\\| | u   \n | |/__  \n  \\____| \n _// \\\\  \n(__)(__) ",
  "D": "  ____    \n |  _\'\\   \n/| | | |  \nU| |_| |\\ \n |____/ u \n  |||_    \n (__)_)   ",
  "E": "U _____ u \n\\| ___\'|/ \n |  _|\'   \n | |___   \n |_____|  \n <<   >>  \n(__) (__) ",
  "F": "  _____  \n |\' ___| \nU| |_  u \n\\|  _|/  \n |_|     \n )(\\\\,-  \n(__)(_/  ",
  "G": "   ____   \nU /\'___|u \n\\| |  _ / \n | |_| |  \n  \\____|  \n  _)(|_   \n (__)__)  ",
  "H": "  _   _   \n |'| |'|  \n/| |_| |\\ \nU|  _  |u \n |_| |_|  \n //   \\\\  \n(_\') (\'_) ",
  "I": "              \n     ___      \n    |_'_|     \n     | |      \n   U/| |\\u    \n.-,_|___|_,-. \n \\_)-' '-(_/  ",
  "J": "     _      \n  U |\'| u   \n _ \\| |/    \n| |_| |_,-. \n \\___/-(_/  \n  _//       \n (__)       ",
  "K": "   _  __    \n  |'|/ /    \n  | ' /     \nU/| . \\\\u   \n  |_|\\_\\    \n,-,>> \\\\,-. \n \\.)   (_/  ",
  "L": "   _      \n  |\'|     \nU | | u   \n \\| |/__  \n  |_____| \n  //  \\\\  \n (_\')(\'_) ",
  "M": "  __  __   \nU|' \\/ '|u \n\\| |\\/| |/ \n | |  | |  \n |_|  |_|  \n<<,-,,-.   \n (./  \\.)  ",
  "N": "  _   _     \n | \\ |\'|    \n<|  \\| |>   \nU| |\\  |u   \n |_| \\_|    \n ||   \\\\,-. \n (_\')  (_/  ",
  "O": "   U  ___ u \n    \\/\'_ \\/ \n    | | | | \n.-,_| |_| | \n \\_)-\\___/  \n      \\\\    \n     (__)   ",
  "P": "  ____    \nU|  _\'\\ u \n\\| |_) |/ \n |  __/   \n |_|      \n ||>>_    \n(__)__)   ",
  "Q": "   ___    \n  / ' \\   \n | |'| |  \n/| |_| |\\ \nU \\__\\_\\u \n   \\\\//   \n  (_(__)  ",
  "R": "   ____     \nU |  _\'\\ u  \n \\| |_) |/  \n  |  _ <    \n  |_| \\_\\   \n  //   \\\\_  \n (__)  (__) ",
  "S": "  ____     \n / __\'| u  \n<\\___ \\/   \n u___) |   \n |____/>>  \n  )(  (__) \n (__)      ",
  "T": "  _____   \n |_ \' _|  \n   | |    \n  /| |\\   \n u |_|U   \n _// \\\\_  \n(__) (__) ",
  "U": "   _   _  \nU |\'|u| | \n \\| |\\| | \n  | |_| | \n <<\\___/  \n(__) )(   \n    (__)  ",
  "V": " __     __   \n \\ \\   /\'/u  \n  \\ \\ / //   \n  /\\ V /_,-. \n U  \\_/-(_/  \n   //        \n  (__)       ",
  "W": "              \n __        __ \n \\\'\\      /\'/ \n /\\ \\ /\\ / /\\ \nU  \\ V  V /  U\n.-,_\\ /\\ /_,-.\n \\_)-'  '-(_/ ",
  "X": "  __  __   \n  \\ \\/\'/   \n  /\\  /\\   \n U /  \\ u  \n  /_/\\_\\   \n,-,>> \\\\_  \n \\_)  (__) ",
  "Y": "  __   __ \n  \\ \\ / / \n   \\ V /  \n  U_|\'|_u \n    |_|   \n.-,//|(_  \n \\_) (__) ",
  "Z": "  _____  \n |\'_  /u \n U / //  \n \\/ /_   \n /____|  \n _//<<,- \n(__) (_/ "
};
var _default = DancingFont;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb250cy9EYW5jaW5nRm9udC5qcyJdLCJuYW1lcyI6WyJEYW5jaW5nRm9udCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsV0FBVyxHQUFHO0FBQ2xCLE9BQUssK0ZBRGE7QUFFbEIsT0FBSywrRUFGYTtBQUdsQixPQUFLLHdGQUhhO0FBSWxCLE9BQUssaUZBSmE7QUFLbEIsT0FBSywrRUFMYTtBQU1sQixPQUFLLHlGQU5hO0FBT2xCLE9BQUssMEZBUGE7QUFRbEIsT0FBSywrRUFSYTtBQVNsQixPQUFLLHdGQVRhO0FBVWxCLE9BQUssd0ZBVmE7QUFXbEIsT0FBSyxvR0FYYTtBQVlsQixPQUFLLHlGQVphO0FBYWxCLE9BQUssa0ZBYmE7QUFjbEIsT0FBSyx1RkFkYTtBQWVsQixPQUFLLHVGQWZhO0FBZ0JsQixPQUFLLGlGQWhCYTtBQWlCbEIsT0FBSyx1RkFqQmE7QUFrQmxCLE9BQUsseUZBbEJhO0FBbUJsQixPQUFLLGtIQW5CYTtBQW9CbEIsT0FBSyxxR0FwQmE7QUFxQmxCLE9BQUsseUdBckJhO0FBc0JsQixPQUFLLDBGQXRCYTtBQXVCbEIsT0FBSywrRkF2QmE7QUF3QmxCLE9BQUssMEdBeEJhO0FBeUJsQixPQUFLLHlHQXpCYTtBQTBCbEIsT0FBSyx1RkExQmE7QUEyQmxCLE9BQUssMkZBM0JhO0FBNEJsQixPQUFLLHlHQTVCYTtBQTZCbEIsT0FBSyw4RkE3QmE7QUE4QmxCLE9BQUssd0ZBOUJhO0FBK0JsQixPQUFLLHdGQS9CYTtBQWdDbEIsT0FBSyxnSEFoQ2E7QUFpQ2xCLE9BQUssNEhBakNhO0FBa0NsQixPQUFLLHNHQWxDYTtBQW1DbEIsT0FBSyx5RkFuQ2E7QUFvQ2xCLE9BQUs7QUFwQ2EsQ0FBcEI7ZUF1Q2VBLFciLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBEYW5jaW5nRm9udCA9IHtcbiAgXCIwXCI6IFwiICBfX18gICAgICBcXG4gLyBfXFwnXFxcXCAgdSAgXFxufCAvIFUgfC8gICBcXG58IFxcXFwvLyB8LC0uIFxcbiBcXFxcX19fLyhfLyAgXFxuICAvLyAgICAgICBcXG4gKF9fKSAgICAgIFwiLFxuICBcIjFcIjogXCIgICAgXyAgICBcXG4gICAvXFwnfCAgIFxcbiB1IHwgfHUgIFxcbiAgXFxcXHwgfC8gIFxcbiAgIHxffCAgIFxcbiBfLy88LC0sIFxcbihfXykoXy8gIFwiLFxuICBcIjJcIjogXCIgIF9fX18gICAgXFxuIHxfX19cXCdcXFxcICAgXFxuIFUgX18pIHwgIFxcbiBcXFxcLyBfXy8gXFxcXCBcXG4gfF9fX19ffHUgXFxuIDw8ICAvLyAgIFxcbihfXykoX18pICBcIixcbiAgXCIzXCI6IFwiIF9fX19fICAgXFxufF9fX1xcJy91ICBcXG5VX3xfIFxcXFwvICBcXG4gX19fKSB8ICBcXG58X19fXy8gICBcXG4gXy8vIFxcXFxcXFxcICBcXG4oX18pKF9fKSBcIixcbiAgXCI0XCI6IFwiIF8gIF8gICAgXFxufCB8fFxcJ3wgICBcXG58IHx8IHxfICBcXG58X18gICBffCBcXG4gIC98X3xcXFxcICBcXG4gdV98fHxfdSBcXG4gKF9fKV9fKSBcIixcbiAgXCI1XCI6IFwiICBfX19fICAgIFxcblV8XFwnX19ffHUgIFxcblxcXFx8X19fIFxcXFwvICBcXG4gIF9fXykgfCAgXFxuIHxfX19fLyAgIFxcbiwtLD4+XFxcXCwtLiBcXG4gXFxcXCApIChfLyAgXCIsXG4gIFwiNlwiOiBcIiAgIF9fICAgICBcXG5VIC9cXCcvXyB1ICBcXG5cXFxcfCAnXyBcXFxcLyAgXFxuIHwgKF8pIHwgIFxcbiAgXFxcXF9fXy8gICBcXG4gXy8vIFxcXFxcXFxcXyAgXFxuKF9fKSAoX18pIFwiLFxuICBcIjdcIjogXCIgIF9fX19fICBcXG4gfF9fXyBcXCd8IFxcbiAgICAvIC8gIFxcbiB1Ly8gL1xcXFwgIFxcbiAgL18vIFUgIFxcbiA8PD4+XyAgIFxcbihfXylfXykgIFwiLFxuICBcIjhcIjogXCIgIF9fXyAgICAgXFxuVSggXFwnICkgdSAgXFxuXFxcXC8gICBcXFxcLyAgIFxcbnwgKCApIHwgICBcXG4gXFxcXF9fXy8+PiAgXFxuICApKCAoX18pIFxcbiAoX18pICAgICBcIixcbiAgXCI5XCI6IFwiICAgX19fICAgIFxcbiAgLyBfXFwnXFxcXCAgIFxcbiB8IChfKSB8ICBcXG4gL1xcXFxfXywgfFxcXFwgXFxuVTw8IHxfLyB1IFxcbihfXykgKSggICBcXG4gICAgKF9fKSAgXCIsXG4gIFwiQVwiOiBcIiAgICBfICAgICAgXFxuVSAgL1xcJ1xcXFwgIHUgIFxcbiBcXFxcLyBfIFxcXFwvICAgXFxuIC8gX19fIFxcXFwgICBcXG4vXy8gICBcXFxcX1xcXFwgIFxcbiBcXFxcXFxcXCAgICA+PiAgXFxuKF9fKSAgKF9fKSBcIixcbiAgXCJCXCI6IFwiICAgX19fXyAgIFxcblUgfCBfX1xcJyl1IFxcbiBcXFxcfCAgXyBcXFxcLyBcXG4gIHwgfF8pIHwgXFxuICB8X19fXy8gIFxcbiBffHwgXFxcXFxcXFxfICBcXG4oX18pIChfXykgXCIsXG4gIFwiQ1wiOiBcIiAgIF9fX18gIFxcblUgL1xcJ19fX3wgXFxuXFxcXHwgfCB1ICAgXFxuIHwgfC9fXyAgXFxuICBcXFxcX19fX3wgXFxuIF8vLyBcXFxcXFxcXCAgXFxuKF9fKShfXykgXCIsXG4gIFwiRFwiOiBcIiAgX19fXyAgICBcXG4gfCAgX1xcJ1xcXFwgICBcXG4vfCB8IHwgfCAgXFxuVXwgfF98IHxcXFxcIFxcbiB8X19fXy8gdSBcXG4gIHx8fF8gICAgXFxuIChfXylfKSAgIFwiLFxuICBcIkVcIjogXCJVIF9fX19fIHUgXFxuXFxcXHwgX19fXFwnfC8gXFxuIHwgIF98XFwnICAgXFxuIHwgfF9fXyAgIFxcbiB8X19fX198ICBcXG4gPDwgICA+PiAgXFxuKF9fKSAoX18pIFwiLFxuICBcIkZcIjogXCIgIF9fX19fICBcXG4gfFxcJyBfX198IFxcblV8IHxfICB1IFxcblxcXFx8ICBffC8gIFxcbiB8X3wgICAgIFxcbiApKFxcXFxcXFxcLC0gIFxcbihfXykoXy8gIFwiLFxuICBcIkdcIjogXCIgICBfX19fICAgXFxuVSAvXFwnX19ffHUgXFxuXFxcXHwgfCAgXyAvIFxcbiB8IHxffCB8ICBcXG4gIFxcXFxfX19ffCAgXFxuICBfKSh8XyAgIFxcbiAoX18pX18pICBcIixcbiAgXCJIXCI6IFwiICBfICAgXyAgIFxcbiB8J3wgfCd8ICBcXG4vfCB8X3wgfFxcXFwgXFxuVXwgIF8gIHx1IFxcbiB8X3wgfF98ICBcXG4gLy8gICBcXFxcXFxcXCAgXFxuKF9cXCcpIChcXCdfKSBcIixcbiAgXCJJXCI6IFwiICAgICAgICAgICAgICBcXG4gICAgIF9fXyAgICAgIFxcbiAgICB8X1xcJ198ICAgICBcXG4gICAgIHwgfCAgICAgIFxcbiAgIFUvfCB8XFxcXHUgICAgXFxuLi0sX3xfX198XywtLiBcXG4gXFxcXF8pLScgJy0oXy8gIFwiLFxuICBcIkpcIjogXCIgICAgIF8gICAgICBcXG4gIFUgfFxcJ3wgdSAgIFxcbiBfIFxcXFx8IHwvICAgIFxcbnwgfF98IHxfLC0uIFxcbiBcXFxcX19fLy0oXy8gIFxcbiAgXy8vICAgICAgIFxcbiAoX18pICAgICAgIFwiLFxuICBcIktcIjogXCIgICBfICBfXyAgICBcXG4gIHxcXCd8LyAvICAgIFxcbiAgfCAnIC8gICAgIFxcblUvfCAuIFxcXFxcXFxcdSAgIFxcbiAgfF98XFxcXF9cXFxcICAgIFxcbiwtLD4+IFxcXFxcXFxcLC0uIFxcbiBcXFxcLikgICAoXy8gIFwiLFxuICBcIkxcIjogXCIgICBfICAgICAgXFxuICB8XFwnfCAgICAgXFxuVSB8IHwgdSAgIFxcbiBcXFxcfCB8L19fICBcXG4gIHxfX19fX3wgXFxuICAvLyAgXFxcXFxcXFwgIFxcbiAoX1xcJykoXFwnXykgXCIsXG4gIFwiTVwiOiBcIiAgX18gIF9fICAgXFxuVXwnIFxcXFwvICd8dSBcXG5cXFxcfCB8XFxcXC98IHwvIFxcbiB8IHwgIHwgfCAgXFxuIHxffCAgfF98ICBcXG48PCwtLCwtLiAgIFxcbiAoLi8gIFxcXFwuKSAgXCIsXG4gIFwiTlwiOiBcIiAgXyAgIF8gICAgIFxcbiB8IFxcXFwgfFxcJ3wgICAgXFxuPHwgIFxcXFx8IHw+ICAgXFxuVXwgfFxcXFwgIHx1ICAgXFxuIHxffCBcXFxcX3wgICAgXFxuIHx8ICAgXFxcXFxcXFwsLS4gXFxuIChfXFwnKSAgKF8vICBcIixcbiAgXCJPXCI6IFwiICAgVSAgX19fIHUgXFxuICAgIFxcXFwvXFwnXyBcXFxcLyBcXG4gICAgfCB8IHwgfCBcXG4uLSxffCB8X3wgfCBcXG4gXFxcXF8pLVxcXFxfX18vICBcXG4gICAgICBcXFxcXFxcXCAgICBcXG4gICAgIChfXykgICBcIixcbiAgXCJQXCI6IFwiICBfX19fICAgIFxcblV8ICBfXFwnXFxcXCB1IFxcblxcXFx8IHxfKSB8LyBcXG4gfCAgX18vICAgXFxuIHxffCAgICAgIFxcbiB8fD4+XyAgICBcXG4oX18pX18pICAgXCIsXG4gIFwiUVwiOiBcIiAgIF9fXyAgICBcXG4gIC8gXFwnIFxcXFwgICBcXG4gfCB8XFwnfCB8ICBcXG4vfCB8X3wgfFxcXFwgXFxuVSBcXFxcX19cXFxcX1xcXFx1IFxcbiAgIFxcXFxcXFxcLy8gICBcXG4gIChfKF9fKSAgXCIsXG4gIFwiUlwiOiBcIiAgIF9fX18gICAgIFxcblUgfCAgX1xcJ1xcXFwgdSAgXFxuIFxcXFx8IHxfKSB8LyAgXFxuICB8ICBfIDwgICAgXFxuICB8X3wgXFxcXF9cXFxcICAgXFxuICAvLyAgIFxcXFxcXFxcXyAgXFxuIChfXykgIChfXykgXCIsXG4gIFwiU1wiOiBcIiAgX19fXyAgICAgXFxuIC8gX19cXCd8IHUgIFxcbjxcXFxcX19fIFxcXFwvICAgXFxuIHVfX18pIHwgICBcXG4gfF9fX18vPj4gIFxcbiAgKSggIChfXykgXFxuIChfXykgICAgICBcIixcbiAgXCJUXCI6IFwiICBfX19fXyAgIFxcbiB8XyBcXCcgX3wgIFxcbiAgIHwgfCAgICBcXG4gIC98IHxcXFxcICAgXFxuIHUgfF98VSAgIFxcbiBfLy8gXFxcXFxcXFxfICBcXG4oX18pIChfXykgXCIsXG4gIFwiVVwiOiBcIiAgIF8gICBfICBcXG5VIHxcXCd8dXwgfCBcXG4gXFxcXHwgfFxcXFx8IHwgXFxuICB8IHxffCB8IFxcbiA8PFxcXFxfX18vICBcXG4oX18pICkoICAgXFxuICAgIChfXykgIFwiLFxuICBcIlZcIjogXCIgX18gICAgIF9fICAgXFxuIFxcXFwgXFxcXCAgIC9cXCcvdSAgXFxuICBcXFxcIFxcXFwgLyAvLyAgIFxcbiAgL1xcXFwgViAvXywtLiBcXG4gVSAgXFxcXF8vLShfLyAgXFxuICAgLy8gICAgICAgIFxcbiAgKF9fKSAgICAgICBcIixcbiAgXCJXXCI6IFwiICAgICAgICAgICAgICBcXG4gX18gICAgICAgIF9fIFxcbiBcXFxcXFwnXFxcXCAgICAgIC9cXCcvIFxcbiAvXFxcXCBcXFxcIC9cXFxcIC8gL1xcXFwgXFxuVSAgXFxcXCBWICBWIC8gIFVcXG4uLSxfXFxcXCAvXFxcXCAvXywtLlxcbiBcXFxcXyktJyAgJy0oXy8gXCIsXG4gIFwiWFwiOiBcIiAgX18gIF9fICAgXFxuICBcXFxcIFxcXFwvXFwnLyAgIFxcbiAgL1xcXFwgIC9cXFxcICAgXFxuIFUgLyAgXFxcXCB1ICBcXG4gIC9fL1xcXFxfXFxcXCAgIFxcbiwtLD4+IFxcXFxcXFxcXyAgXFxuIFxcXFxfKSAgKF9fKSBcIixcbiAgXCJZXCI6IFwiICBfXyAgIF9fIFxcbiAgXFxcXCBcXFxcIC8gLyBcXG4gICBcXFxcIFYgLyAgXFxuICBVX3xcXCd8X3UgXFxuICAgIHxffCAgIFxcbi4tLC8vfChfICBcXG4gXFxcXF8pIChfXykgXCIsXG4gIFwiWlwiOiBcIiAgX19fX18gIFxcbiB8XFwnXyAgL3UgXFxuIFUgLyAvLyAgXFxuIFxcXFwvIC9fICAgXFxuIC9fX19ffCAgXFxuIF8vLzw8LC0gXFxuKF9fKSAoXy8gXCJcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGFuY2luZ0ZvbnQiXX0=