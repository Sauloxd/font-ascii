"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
const DancingFont = {
  "0": "  ___      \n / _\'\\  u  \n| / U |/   \n| \\// |,-. \n \\___/(_/  \n  //       \n (__)      ",
  "1": "    _    \n   /\'|   \n u | |u  \n  \\| |/  \n   |_|   \n _//<,-, \n(__)(_/  ",
  "2": "  ____    \n |___\'\\   \n U __) |  \n \\/ __/ \\ \n |_____|u \n <<  //   \n(__)(__)  ",
  "3": " _____   \n|___\'/u  \nU_|_ \\/  \n ___) |  \n|____/   \n _// \\\\  \n(__)(__) ",
  "4": " _  _    \n| ||\'|   \n| || |_  \n|__   _| \n  /|_|\\  \n u_|||_u \n (__)__) ",
  "5": "  ____    \nU|\'___|u  \n\\|___ \\/  \n  ___) |  \n |____/   \n,-,>>\\,-. \n \\ ) (_/  ",
  "6": "   __     \nU /\'/_ u  \n\\| '_ \\/  \n | (_) |  \n  \\___/   \n _// \\\\_  \n(__) (__) ",
  "7": "  _____  \n |___ \'| \n    / /  \n u// /\\  \n  /_/ U  \n <<>>_   \n(__)__)  ",
  "8": "  ___     \nU( \' ) u  \n\\/   \\/   \n| ( ) |   \n \\___/>>  \n  )( (__) \n (__)     ",
  "9": "   ___    \n  / _\'\\   \n | (_) |  \n /\\__, |\\ \nU<< |_/ u \n(__) )(   \n    (__)  ",
  "A": "    _      \nU  /\'\\  u  \n \\/ _ \\/   \n / ___ \\   \n/_/   \\_\\  \n \\\\    >>  \n(__)  (__) ",
  "B": "   ____   \nU | __\')u \n \\|  _ \\/ \n  | |_) | \n  |____/  \n _|| \\\\_  \n(__) (__) ",
  "C": "   ____  \nU /\'___| \n\\| | u   \n | |/__  \n  \\____| \n _// \\\\  \n(__)(__) ",
  "D": "  ____    \n |  _\'\\   \n/| | | |  \nU| |_| |\\ \n |____/ u \n  |||_    \n (__)_)   ",
  "E": "U _____ u \n\\| ___\'|/ \n |  _|\'   \n | |___   \n |_____|  \n <<   >>  \n(__) (__) ",
  "F": "  _____  \n |\' ___| \nU| |_  u \n\\|  _|/  \n |_|     \n )(\\\\,-  \n(__)(_/  ",
  "G": "   ____   \nU /\'___|u \n\\| |  _ / \n | |_| |  \n  \\____|  \n  _)(|_   \n (__)__)  ",
  "H": "  _   _   \n |'| |'|  \n/| |_| |\\ \nU|  _  |u \n |_| |_|  \n //   \\\\  \n(_\') (\'_) ",
  "I": "              \n     ___      \n    |_\'_|     \n     | |      \n   U/| |\\u    \n.-,_|___|_,-. \n \\_)-' '-(_/  ",
  "J": "     _      \n  U |\'| u   \n _ \\| |/    \n| |_| |_,-. \n \\___/-(_/  \n  _//       \n (__)       ",
  "K": "   _  __    \n  |\'|/ /    \n  | ' /     \nU/| . \\\\u   \n  |_|\\_\\    \n,-,>> \\\\,-. \n \\.)   (_/  ",
  "L": "   _      \n  |\'|     \nU | | u   \n \\| |/__  \n  |_____| \n  //  \\\\  \n (_\')(\'_) ",
  "M": "  __  __   \nU|' \\/ '|u \n\\| |\\/| |/ \n | |  | |  \n |_|  |_|  \n<<,-,,-.   \n (./  \\.)  ",
  "N": "  _   _     \n | \\ |\'|    \n<|  \\| |>   \nU| |\\  |u   \n |_| \\_|    \n ||   \\\\,-. \n (_\')  (_/  ",
  "O": "   U  ___ u \n    \\/\'_ \\/ \n    | | | | \n.-,_| |_| | \n \\_)-\\___/  \n      \\\\    \n     (__)   ",
  "P": "  ____    \nU|  _\'\\ u \n\\| |_) |/ \n |  __/   \n |_|      \n ||>>_    \n(__)__)   ",
  "Q": "   ___    \n  / \' \\   \n | |\'| |  \n/| |_| |\\ \nU \\__\\_\\u \n   \\\\//   \n  (_(__)  ",
  "R": "   ____     \nU |  _\'\\ u  \n \\| |_) |/  \n  |  _ <    \n  |_| \\_\\   \n  //   \\\\_  \n (__)  (__) ",
  "S": "  ____     \n / __\'| u  \n<\\___ \\/   \n u___) |   \n |____/>>  \n  )(  (__) \n (__)      ",
  "T": "  _____   \n |_ \' _|  \n   | |    \n  /| |\\   \n u |_|U   \n _// \\\\_  \n(__) (__) ",
  "U": "   _   _  \nU |\'|u| | \n \\| |\\| | \n  | |_| | \n <<\\___/  \n(__) )(   \n    (__)  ",
  "V": " __     __   \n \\ \\   /\'/u  \n  \\ \\ / //   \n  /\\ V /_,-. \n U  \\_/-(_/  \n   //        \n  (__)       ",
  "W": "              \n __        __ \n \\\'\\      /\'/ \n /\\ \\ /\\ / /\\ \nU  \\ V  V /  U\n.-,_\\ /\\ /_,-.\n \\_)-'  '-(_/ ",
  "X": "  __  __   \n  \\ \\/\'/   \n  /\\  /\\   \n U /  \\ u  \n  /_/\\_\\   \n,-,>> \\\\_  \n \\_)  (__) ",
  "Y": "  __   __ \n  \\ \\ / / \n   \\ V /  \n  U_|\'|_u \n    |_|   \n.-,//|(_  \n \\_) (__) ",
  "Z": "  _____  \n |\'_  /u \n U / //  \n \\/ /_   \n /____|  \n _//<<,- \n(__) (_/ "
};

exports.default = DancingFont;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb250cy9EYW5jaW5nRm9udC5qcyJdLCJuYW1lcyI6WyJEYW5jaW5nRm9udCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxjQUFjO0FBQ2xCLE9BQUssK0ZBRGE7QUFFbEIsT0FBSywrRUFGYTtBQUdsQixPQUFLLHdGQUhhO0FBSWxCLE9BQUssaUZBSmE7QUFLbEIsT0FBSywrRUFMYTtBQU1sQixPQUFLLHlGQU5hO0FBT2xCLE9BQUssMEZBUGE7QUFRbEIsT0FBSywrRUFSYTtBQVNsQixPQUFLLHdGQVRhO0FBVWxCLE9BQUssd0ZBVmE7QUFXbEIsT0FBSyxvR0FYYTtBQVlsQixPQUFLLHlGQVphO0FBYWxCLE9BQUssa0ZBYmE7QUFjbEIsT0FBSyx1RkFkYTtBQWVsQixPQUFLLHVGQWZhO0FBZ0JsQixPQUFLLGlGQWhCYTtBQWlCbEIsT0FBSyx1RkFqQmE7QUFrQmxCLE9BQUsseUZBbEJhO0FBbUJsQixPQUFLLG1IQW5CYTtBQW9CbEIsT0FBSyxxR0FwQmE7QUFxQmxCLE9BQUssMEdBckJhO0FBc0JsQixPQUFLLDBGQXRCYTtBQXVCbEIsT0FBSywrRkF2QmE7QUF3QmxCLE9BQUssMEdBeEJhO0FBeUJsQixPQUFLLHlHQXpCYTtBQTBCbEIsT0FBSyx1RkExQmE7QUEyQmxCLE9BQUssNkZBM0JhO0FBNEJsQixPQUFLLHlHQTVCYTtBQTZCbEIsT0FBSyw4RkE3QmE7QUE4QmxCLE9BQUssd0ZBOUJhO0FBK0JsQixPQUFLLHdGQS9CYTtBQWdDbEIsT0FBSyxnSEFoQ2E7QUFpQ2xCLE9BQUssNEhBakNhO0FBa0NsQixPQUFLLHNHQWxDYTtBQW1DbEIsT0FBSyx5RkFuQ2E7QUFvQ2xCLE9BQUs7QUFwQ2EsQ0FBcEI7O2tCQXVDZUEsVyIsImZpbGUiOiJEYW5jaW5nRm9udC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERhbmNpbmdGb250ID0ge1xuICBcIjBcIjogXCIgIF9fXyAgICAgIFxcbiAvIF9cXCdcXFxcICB1ICBcXG58IC8gVSB8LyAgIFxcbnwgXFxcXC8vIHwsLS4gXFxuIFxcXFxfX18vKF8vICBcXG4gIC8vICAgICAgIFxcbiAoX18pICAgICAgXCIsXG4gIFwiMVwiOiBcIiAgICBfICAgIFxcbiAgIC9cXCd8ICAgXFxuIHUgfCB8dSAgXFxuICBcXFxcfCB8LyAgXFxuICAgfF98ICAgXFxuIF8vLzwsLSwgXFxuKF9fKShfLyAgXCIsXG4gIFwiMlwiOiBcIiAgX19fXyAgICBcXG4gfF9fX1xcJ1xcXFwgICBcXG4gVSBfXykgfCAgXFxuIFxcXFwvIF9fLyBcXFxcIFxcbiB8X19fX198dSBcXG4gPDwgIC8vICAgXFxuKF9fKShfXykgIFwiLFxuICBcIjNcIjogXCIgX19fX18gICBcXG58X19fXFwnL3UgIFxcblVffF8gXFxcXC8gIFxcbiBfX18pIHwgIFxcbnxfX19fLyAgIFxcbiBfLy8gXFxcXFxcXFwgIFxcbihfXykoX18pIFwiLFxuICBcIjRcIjogXCIgXyAgXyAgICBcXG58IHx8XFwnfCAgIFxcbnwgfHwgfF8gIFxcbnxfXyAgIF98IFxcbiAgL3xffFxcXFwgIFxcbiB1X3x8fF91IFxcbiAoX18pX18pIFwiLFxuICBcIjVcIjogXCIgIF9fX18gICAgXFxuVXxcXCdfX198dSAgXFxuXFxcXHxfX18gXFxcXC8gIFxcbiAgX19fKSB8ICBcXG4gfF9fX18vICAgXFxuLC0sPj5cXFxcLC0uIFxcbiBcXFxcICkgKF8vICBcIixcbiAgXCI2XCI6IFwiICAgX18gICAgIFxcblUgL1xcJy9fIHUgIFxcblxcXFx8ICdfIFxcXFwvICBcXG4gfCAoXykgfCAgXFxuICBcXFxcX19fLyAgIFxcbiBfLy8gXFxcXFxcXFxfICBcXG4oX18pIChfXykgXCIsXG4gIFwiN1wiOiBcIiAgX19fX18gIFxcbiB8X19fIFxcJ3wgXFxuICAgIC8gLyAgXFxuIHUvLyAvXFxcXCAgXFxuICAvXy8gVSAgXFxuIDw8Pj5fICAgXFxuKF9fKV9fKSAgXCIsXG4gIFwiOFwiOiBcIiAgX19fICAgICBcXG5VKCBcXCcgKSB1ICBcXG5cXFxcLyAgIFxcXFwvICAgXFxufCAoICkgfCAgIFxcbiBcXFxcX19fLz4+ICBcXG4gICkoIChfXykgXFxuIChfXykgICAgIFwiLFxuICBcIjlcIjogXCIgICBfX18gICAgXFxuICAvIF9cXCdcXFxcICAgXFxuIHwgKF8pIHwgIFxcbiAvXFxcXF9fLCB8XFxcXCBcXG5VPDwgfF8vIHUgXFxuKF9fKSApKCAgIFxcbiAgICAoX18pICBcIixcbiAgXCJBXCI6IFwiICAgIF8gICAgICBcXG5VICAvXFwnXFxcXCAgdSAgXFxuIFxcXFwvIF8gXFxcXC8gICBcXG4gLyBfX18gXFxcXCAgIFxcbi9fLyAgIFxcXFxfXFxcXCAgXFxuIFxcXFxcXFxcICAgID4+ICBcXG4oX18pICAoX18pIFwiLFxuICBcIkJcIjogXCIgICBfX19fICAgXFxuVSB8IF9fXFwnKXUgXFxuIFxcXFx8ICBfIFxcXFwvIFxcbiAgfCB8XykgfCBcXG4gIHxfX19fLyAgXFxuIF98fCBcXFxcXFxcXF8gIFxcbihfXykgKF9fKSBcIixcbiAgXCJDXCI6IFwiICAgX19fXyAgXFxuVSAvXFwnX19ffCBcXG5cXFxcfCB8IHUgICBcXG4gfCB8L19fICBcXG4gIFxcXFxfX19ffCBcXG4gXy8vIFxcXFxcXFxcICBcXG4oX18pKF9fKSBcIixcbiAgXCJEXCI6IFwiICBfX19fICAgIFxcbiB8ICBfXFwnXFxcXCAgIFxcbi98IHwgfCB8ICBcXG5VfCB8X3wgfFxcXFwgXFxuIHxfX19fLyB1IFxcbiAgfHx8XyAgICBcXG4gKF9fKV8pICAgXCIsXG4gIFwiRVwiOiBcIlUgX19fX18gdSBcXG5cXFxcfCBfX19cXCd8LyBcXG4gfCAgX3xcXCcgICBcXG4gfCB8X19fICAgXFxuIHxfX19fX3wgIFxcbiA8PCAgID4+ICBcXG4oX18pIChfXykgXCIsXG4gIFwiRlwiOiBcIiAgX19fX18gIFxcbiB8XFwnIF9fX3wgXFxuVXwgfF8gIHUgXFxuXFxcXHwgIF98LyAgXFxuIHxffCAgICAgXFxuICkoXFxcXFxcXFwsLSAgXFxuKF9fKShfLyAgXCIsXG4gIFwiR1wiOiBcIiAgIF9fX18gICBcXG5VIC9cXCdfX198dSBcXG5cXFxcfCB8ICBfIC8gXFxuIHwgfF98IHwgIFxcbiAgXFxcXF9fX198ICBcXG4gIF8pKHxfICAgXFxuIChfXylfXykgIFwiLFxuICBcIkhcIjogXCIgIF8gICBfICAgXFxuIHwnfCB8J3wgIFxcbi98IHxffCB8XFxcXCBcXG5VfCAgXyAgfHUgXFxuIHxffCB8X3wgIFxcbiAvLyAgIFxcXFxcXFxcICBcXG4oX1xcJykgKFxcJ18pIFwiLFxuICBcIklcIjogXCIgICAgICAgICAgICAgIFxcbiAgICAgX19fICAgICAgXFxuICAgIHxfXFwnX3wgICAgIFxcbiAgICAgfCB8ICAgICAgXFxuICAgVS98IHxcXFxcdSAgICBcXG4uLSxffF9fX3xfLC0uIFxcbiBcXFxcXyktJyAnLShfLyAgXCIsXG4gIFwiSlwiOiBcIiAgICAgXyAgICAgIFxcbiAgVSB8XFwnfCB1ICAgXFxuIF8gXFxcXHwgfC8gICAgXFxufCB8X3wgfF8sLS4gXFxuIFxcXFxfX18vLShfLyAgXFxuICBfLy8gICAgICAgXFxuIChfXykgICAgICAgXCIsXG4gIFwiS1wiOiBcIiAgIF8gIF9fICAgIFxcbiAgfFxcJ3wvIC8gICAgXFxuICB8ICcgLyAgICAgXFxuVS98IC4gXFxcXFxcXFx1ICAgXFxuICB8X3xcXFxcX1xcXFwgICAgXFxuLC0sPj4gXFxcXFxcXFwsLS4gXFxuIFxcXFwuKSAgIChfLyAgXCIsXG4gIFwiTFwiOiBcIiAgIF8gICAgICBcXG4gIHxcXCd8ICAgICBcXG5VIHwgfCB1ICAgXFxuIFxcXFx8IHwvX18gIFxcbiAgfF9fX19ffCBcXG4gIC8vICBcXFxcXFxcXCAgXFxuIChfXFwnKShcXCdfKSBcIixcbiAgXCJNXCI6IFwiICBfXyAgX18gICBcXG5VfCcgXFxcXC8gJ3x1IFxcblxcXFx8IHxcXFxcL3wgfC8gXFxuIHwgfCAgfCB8ICBcXG4gfF98ICB8X3wgIFxcbjw8LC0sLC0uICAgXFxuICguLyAgXFxcXC4pICBcIixcbiAgXCJOXCI6IFwiICBfICAgXyAgICAgXFxuIHwgXFxcXCB8XFwnfCAgICBcXG48fCAgXFxcXHwgfD4gICBcXG5VfCB8XFxcXCAgfHUgICBcXG4gfF98IFxcXFxffCAgICBcXG4gfHwgICBcXFxcXFxcXCwtLiBcXG4gKF9cXCcpICAoXy8gIFwiLFxuICBcIk9cIjogXCIgICBVICBfX18gdSBcXG4gICAgXFxcXC9cXCdfIFxcXFwvIFxcbiAgICB8IHwgfCB8IFxcbi4tLF98IHxffCB8IFxcbiBcXFxcXyktXFxcXF9fXy8gIFxcbiAgICAgIFxcXFxcXFxcICAgIFxcbiAgICAgKF9fKSAgIFwiLFxuICBcIlBcIjogXCIgIF9fX18gICAgXFxuVXwgIF9cXCdcXFxcIHUgXFxuXFxcXHwgfF8pIHwvIFxcbiB8ICBfXy8gICBcXG4gfF98ICAgICAgXFxuIHx8Pj5fICAgIFxcbihfXylfXykgICBcIixcbiAgXCJRXCI6IFwiICAgX19fICAgIFxcbiAgLyBcXCcgXFxcXCAgIFxcbiB8IHxcXCd8IHwgIFxcbi98IHxffCB8XFxcXCBcXG5VIFxcXFxfX1xcXFxfXFxcXHUgXFxuICAgXFxcXFxcXFwvLyAgIFxcbiAgKF8oX18pICBcIixcbiAgXCJSXCI6IFwiICAgX19fXyAgICAgXFxuVSB8ICBfXFwnXFxcXCB1ICBcXG4gXFxcXHwgfF8pIHwvICBcXG4gIHwgIF8gPCAgICBcXG4gIHxffCBcXFxcX1xcXFwgICBcXG4gIC8vICAgXFxcXFxcXFxfICBcXG4gKF9fKSAgKF9fKSBcIixcbiAgXCJTXCI6IFwiICBfX19fICAgICBcXG4gLyBfX1xcJ3wgdSAgXFxuPFxcXFxfX18gXFxcXC8gICBcXG4gdV9fXykgfCAgIFxcbiB8X19fXy8+PiAgXFxuICApKCAgKF9fKSBcXG4gKF9fKSAgICAgIFwiLFxuICBcIlRcIjogXCIgIF9fX19fICAgXFxuIHxfIFxcJyBffCAgXFxuICAgfCB8ICAgIFxcbiAgL3wgfFxcXFwgICBcXG4gdSB8X3xVICAgXFxuIF8vLyBcXFxcXFxcXF8gIFxcbihfXykgKF9fKSBcIixcbiAgXCJVXCI6IFwiICAgXyAgIF8gIFxcblUgfFxcJ3x1fCB8IFxcbiBcXFxcfCB8XFxcXHwgfCBcXG4gIHwgfF98IHwgXFxuIDw8XFxcXF9fXy8gIFxcbihfXykgKSggICBcXG4gICAgKF9fKSAgXCIsXG4gIFwiVlwiOiBcIiBfXyAgICAgX18gICBcXG4gXFxcXCBcXFxcICAgL1xcJy91ICBcXG4gIFxcXFwgXFxcXCAvIC8vICAgXFxuICAvXFxcXCBWIC9fLC0uIFxcbiBVICBcXFxcXy8tKF8vICBcXG4gICAvLyAgICAgICAgXFxuICAoX18pICAgICAgIFwiLFxuICBcIldcIjogXCIgICAgICAgICAgICAgIFxcbiBfXyAgICAgICAgX18gXFxuIFxcXFxcXCdcXFxcICAgICAgL1xcJy8gXFxuIC9cXFxcIFxcXFwgL1xcXFwgLyAvXFxcXCBcXG5VICBcXFxcIFYgIFYgLyAgVVxcbi4tLF9cXFxcIC9cXFxcIC9fLC0uXFxuIFxcXFxfKS0nICAnLShfLyBcIixcbiAgXCJYXCI6IFwiICBfXyAgX18gICBcXG4gIFxcXFwgXFxcXC9cXCcvICAgXFxuICAvXFxcXCAgL1xcXFwgICBcXG4gVSAvICBcXFxcIHUgIFxcbiAgL18vXFxcXF9cXFxcICAgXFxuLC0sPj4gXFxcXFxcXFxfICBcXG4gXFxcXF8pICAoX18pIFwiLFxuICBcIllcIjogXCIgIF9fICAgX18gXFxuICBcXFxcIFxcXFwgLyAvIFxcbiAgIFxcXFwgViAvICBcXG4gIFVffFxcJ3xfdSBcXG4gICAgfF98ICAgXFxuLi0sLy98KF8gIFxcbiBcXFxcXykgKF9fKSBcIixcbiAgXCJaXCI6IFwiICBfX19fXyAgXFxuIHxcXCdfICAvdSBcXG4gVSAvIC8vICBcXG4gXFxcXC8gL18gICBcXG4gL19fX198ICBcXG4gXy8vPDwsLSBcXG4oX18pIChfLyBcIlxufVxuXG5leHBvcnQgZGVmYXVsdCBEYW5jaW5nRm9udCJdfQ==